name: Add Issue to project
on:
  issues:
    types:
      - opened
jobs:
  track_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.YOUR_TOKEN }}
          ACCOUNT: mfahlandt
          PROJECT_NUMBER: 3
        run: |
          gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            query($user: String!, $number: Int!) {
              user(login: $user){
                projectNext(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      id
                      name
                      settings
                    }
                  }
                }
              }
            }' -f user=$ACCOUNT -F number=$PROJECT_NUMBER > project_data.json

          echo "Project data JSON:"
          cat project_data.json
          echo
          
          echo -n "jq version: "
          jq --version

          pid=$(jq '.data.user.projectNext.id' project_data.json)
          echo "Found project ID $pid"
          echo "PROJECT_ID=$pid" >> $GITHUB_ENV
      - name: Use the value
        env:
          PROJECT_ID: ${{  env.PROJECT_ID }}
        id: step_two
        run: |
          echo $PROJECT_ID # This will output 'yellow'
      - name: Add Issue to project
        env:
          GITHUB_TOKEN: ${{ secrets.YOUR_TOKEN }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
          PROJECT_ID: ${{ env.PROJECT_ID }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectNextItem(input: {projectId: $project, contentId: $issue}) {
                projectNextItem {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID --jq '.data.addProjectNextItem.projectNextItem.id')"

          echo 'ITEM_ID='$item_id >> $GITHUB_ENV
